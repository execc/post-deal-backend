node {
  # Type of cryptography
  waves-crypto = no

  #accounts.conf Node owner address
  owner-address = "3QZdm3KxwX4GRdrdGLxeZ4xmEyrv5rEXCqF"

  # NTP settings
  ntp {
    server = "pool.ntp.org"

    # Maximum time without synchronization. Required for PoA consensus.
    fatal-timeout = 5 minutes
  }

  # Node "home" and data directories to store the state
  directory = "/node"
  data-directory = "/node/data"

  wallet {
    # Path to keystore.
    file = "/node/wallet"

    # Access password (always empty when waves-crypto = no)
    password = ""
  }

  # Blockchain settings
  blockchain {
                type = CUSTOM
                # Allow to send transactions with 0 fee
                fees.enabled = false
                consensus {
                  type = "poa"
                  round-duration = "17s"
                  sync-duration = "3s"
                  ban-duration-blocks = 100
                  warnings-for-ban = 3
                  max-bans-percentage = 40
                }
                custom {
                  address-scheme-character = "Z"
                  functionality {
                    feature-check-blocks-period = 1500
                    blocks-for-feature-activation = 1000
                    pre-activated-features = { 2 = 0, 3 = 0, 4 = 0, 5 = 0, 6 = 0, 7 = 0, 9 = 0, 10 = 0, 100 = 0, 101 = 0, 119 = 0, 120 = 0 }
                  }
            
                  # Mainnet genesis settings
                  genesis {
                    # This two parameters play no role for PoA consensus, but they are required
                    average-block-delay: 60s
                    initial-base-target: 153722867
                    # --
                    block-timestamp: 1598864813715
                    initial-balance: 45000000000000
                    genesis-public-key-base-58: "4r6rFUYR7USwtDsgw5GVqj61r2VnACei8cyFcoNVoNL9htFmhbynqfN1axyk4Zoy5SiMQijaiHgiLPaoqnJjN99Q"
                    signature: "UKu97eiArCPzCa71fFLmEEVJxyuDks3S9WYb1qm1mcAAm9bmhJuiX4qBHsNVNGjTwE8CqSuBmWVzEzu6X3C9nqX"
                    transactions = [
                        { recipient: "3QVUnXdCq7vMJDjfcuM7G5qCqFKeBQuac8P", amount: 15000000000000 },
{ recipient: "3Qbur18V2vQfJEcnkqM3H9ieNozVup4mG2v", amount: 15000000000000 },
{ recipient: "3QZdm3KxwX4GRdrdGLxeZ4xmEyrv5rEXCqF", amount: 15000000000000 }
                    ]
                    network-participants = [
                        { public-key: "5U1u5LAxH62RehYfVeiHtRDS4uoQxZSVzYxVUeD1p7bXaTi51AEmgByvGQTokKGRbojFpJdMVP1TSwxHzc2AsSpW", roles: [miner, permissioner, connection_manager, issuer, contract_developer]},
{ public-key: "5vgrnvbLYrdPceDdX6Qd2r7v3756iRnchZ6bvzT7nWrCipZwLqXBYzYg1ipUMm1ZAeULxYEDN3Rj4caDNnPzRmQA", roles: [miner, permissioner, connection_manager, issuer, contract_developer]},
{ public-key: "35Nk2nVJZDwYZFdcd8cDZnFhSQUNnwmNMcC55beoJbzeyvqoUzfcsybnPN7grH4QwNJQAhiePeyeXSNPtWhTm9zw", roles: [miner, permissioner, connection_manager, issuer, contract_developer]}
                    ]
                  }
                }
              }

  # Application logging level. Could be DEBUG | INFO | WARN | ERROR. Default value is INFO.
  logging-level = DEBUG

  # P2P Network settings
  network {
    # Network address
    bind-address = "0.0.0.0"
    # Port number
    port = 6864

    # Peers network addresses and ports
    #   Example: known-peers = ["node-1.com:6864", "node-2.com:6864"]
    known-peers = [ "node-0:6864", "node-1:6864", "node-2:6864" ]

    # Node name to send during handshake. Comment this string out to set random node name.
    node-name = "node-2"

    # How long the information about peer stays in database after the last communication with it
    peers-data-residence-time = 2h

    # String with IP address and port to send as external address during handshake. Could be set automatically if uPnP is enabled.
    declared-address = "0.0.0.0:6864"
  }

  # New blocks generator settings
  miner {
    enable = yes
    docker-host = "unix:///var/run/docker.sock"
    grpc-server {
      port = 6865
    }
    quorum = 2
    interval-after-last-block-then-generation-is-allowed = 60d
    micro-block-interval = 5s
    min-micro-block-age = 3s
    max-transactions-in-micro-block = 500
    minimal-block-generation-offset = 200ms
  }

  # Nodes REST API settings
  rest-api {
    # Enable/disable REST API
    enable = yes

    # Network address to bind to
    bind-address = "0.0.0.0"

    # Port to listen to REST API requests
    port = 6862

    auth {
      type = "api-key"
      # Delete in production env. eGes8YFf3kGKmmPL
      api-key-hash = HfhEAKmH7Sdy8DMt26ATtK8mLHgV4ExaqvtZGH2qVKft
      privacy-api-key-hash = HfhEAKmH7Sdy8DMt26ATtK8mLHgV4ExaqvtZGH2qVKft
    }
  }

  #Settings for Privacy Data Exchange
  privacy {
    storage {
      vendor = postgres
      schema = "public"
      migration-dir = "db/migration"
      profile = "slick.jdbc.PostgresProfile$"
      jdbc-config {
        url = "jdbc:postgresql://db:5432/node_2?user=postgres&password=K3b25J4isZNA"
        driver = "org.postgresql.Driver"
        connectionPool = HikariCP
        connectionTimeout = 5000
        connectionTestQuery = "SELECT 1"
        queueSize = 10000
        numThreads = 5
      }
    }
  }


  # Docker smart contracts settings
  docker-engine {
    # Docker smart contracts enabled flag
    enable = yes

    # Basic auth credentials for docker host
     #docker-auth {
     #  username = "some user"
     #  password = "some password"
     #}

    # Optional connection string to docker host
    docker-host = "unix:///var/run/docker.sock"

    # This is needed to run contracts locally (using the same host machine as a node)
    integration-tests-mode-enable = true

    # Do not remove container in failure. That helps debug problems with contracts locally
    remove-container-on-fail = no

    # Optional string to node REST API if we use remote docker host
    # node-rest-api = "node-2"

    # Execution settings
    execution-limits {
      # gRPC contract startup timeout. Should NOT exceed round-duration
      startup-timeout = 17s
      # Contract execution timeout
      timeout = 10s
      # Memory limit in Megabytes
      memory = 512
      # Memory swap value in Megabytes (see https://docs.docker.com/config/containers/resource_constraints/)
      memory-swap = 0
    }

    # Reuse once created container on subsequent executions
    reuse-containers = yes

    # Remove container with contract after specified duration passed
    remove-container-after = 10m

    # Allows net access for all contracts
    allow-net-access = yes

    # Remote registries auth information
    remote-registries = []

    # Check registry auth on node startup
    check-registry-auth-on-startup = yes

    # Contract execution messages cache settings
    contract-execution-messages-cache {
      # Time to expire for messages in cache
      expire-after = 60m
      # Max number of messages in buffer. When the limit is reached, the node processes all messages in batch
      max-buffer-size = 10
      # Max time for buffer. When time is out, the node processes all messages in batch
      max-buffer-time = 100ms
    }
  }
}